// <auto-generated/>
#pragma warning disable
using Helpdesk.Api.Incidents.GetIncidentShortInfo;
using Marten;
using Marten.Events.Aggregation;
using Marten.Internal.Storage;
using System;
using System.Linq;

namespace Marten.Generated.EventStore
{
    // START: IncidentShortInfoProjectionLiveAggregation944076420
    public class IncidentShortInfoProjectionLiveAggregation944076420 : Marten.Events.Aggregation.SyncLiveAggregatorBase<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo>
    {
        private readonly Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection _incidentShortInfoProjection;

        public IncidentShortInfoProjectionLiveAggregation944076420(Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection incidentShortInfoProjection)
        {
            _incidentShortInfoProjection = incidentShortInfoProjection;
        }



        public override Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Build(System.Collections.Generic.IReadOnlyList<Marten.Events.IEvent> events, Marten.IQuerySession session, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo snapshot)
        {
            if (!events.Any()) return null;
            Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo incidentShortInfo = null;
            var usedEventOnCreate = snapshot is null;
            snapshot ??= Create(events[0], session);;
            if (snapshot is null)
            {
                usedEventOnCreate = false;
                snapshot = CreateDefault(events[0]);
            }

            foreach (var @event in events.Skip(usedEventOnCreate ? 1 : 0))
            {
                snapshot = Apply(@event, snapshot, session);
            }

            return snapshot;
        }


        public Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentLogged> event_IncidentLogged552:
                    return Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection.Create(event_IncidentLogged552.Data);
                    break;
            }

            return null;
        }


        public Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Apply(Marten.Events.IEvent @event, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo aggregate, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.AgentRespondedToIncident> event_AgentRespondedToIncident555:
                    aggregate = _incidentShortInfoProjection.Apply(event_AgentRespondedToIncident555.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.CustomerRespondedToIncident> event_CustomerRespondedToIncident556:
                    aggregate = _incidentShortInfoProjection.Apply(event_CustomerRespondedToIncident556.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentCategorised> event_IncidentCategorised553:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentCategorised553.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentClosed> event_IncidentClosed559:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentClosed559.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentPrioritised> event_IncidentPrioritised554:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentPrioritised554.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentResolved> event_IncidentResolved557:
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentResolved557.Data, aggregate);
                    break;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.ResolutionAcknowledgedByCustomer> event_ResolutionAcknowledgedByCustomer558:
                    aggregate = _incidentShortInfoProjection.Apply(event_ResolutionAcknowledgedByCustomer558.Data, aggregate);
                    break;
            }

            return aggregate;
        }

    }

    // END: IncidentShortInfoProjectionLiveAggregation944076420
    
    
    // START: IncidentShortInfoProjectionInlineHandler944076420
    public class IncidentShortInfoProjectionInlineHandler944076420 : Marten.Events.Aggregation.AggregationRuntime<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid>
    {
        private readonly Marten.IDocumentStore _store;
        private readonly Marten.Events.Aggregation.IAggregateProjection _projection;
        private readonly Marten.Events.Aggregation.IEventSlicer<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> _slicer;
        private readonly Marten.Internal.Storage.IDocumentStorage<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> _storage;
        private readonly Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection _incidentShortInfoProjection;

        public IncidentShortInfoProjectionInlineHandler944076420(Marten.IDocumentStore store, Marten.Events.Aggregation.IAggregateProjection projection, Marten.Events.Aggregation.IEventSlicer<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> slicer, Marten.Internal.Storage.IDocumentStorage<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> storage, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection incidentShortInfoProjection) : base(store, projection, slicer, storage)
        {
            _store = store;
            _projection = projection;
            _slicer = slicer;
            _storage = storage;
            _incidentShortInfoProjection = incidentShortInfoProjection;
        }



        public override async System.Threading.Tasks.ValueTask<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo> ApplyEvent(Marten.IQuerySession session, Marten.Events.Projections.EventSlice<Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo, System.Guid> slice, Marten.Events.IEvent evt, Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo aggregate, System.Threading.CancellationToken cancellationToken)
        {
            switch (evt)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.AgentRespondedToIncident> event_AgentRespondedToIncident563:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_AgentRespondedToIncident563.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.CustomerRespondedToIncident> event_CustomerRespondedToIncident564:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_CustomerRespondedToIncident564.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentCategorised> event_IncidentCategorised561:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentCategorised561.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentClosed> event_IncidentClosed567:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentClosed567.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentLogged> event_IncidentLogged568:
                    aggregate = Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection.Create(event_IncidentLogged568.Data);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentPrioritised> event_IncidentPrioritised562:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentPrioritised562.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentResolved> event_IncidentResolved565:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_IncidentResolved565.Data, aggregate);
                    return aggregate;
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.ResolutionAcknowledgedByCustomer> event_ResolutionAcknowledgedByCustomer566:
                    aggregate ??= CreateDefault(evt);
                    aggregate = _incidentShortInfoProjection.Apply(event_ResolutionAcknowledgedByCustomer566.Data, aggregate);
                    return aggregate;
            }

            return aggregate;
        }


        public Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfo Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<Helpdesk.Api.Incidents.IncidentLogged> event_IncidentLogged560:
                    return Helpdesk.Api.Incidents.GetIncidentShortInfo.IncidentShortInfoProjection.Create(event_IncidentLogged560.Data);
                    break;
            }

            return null;
        }

    }

    // END: IncidentShortInfoProjectionInlineHandler944076420
    
    
}

